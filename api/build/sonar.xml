<?xml version="1.0" encoding="UTF-8"?><!-- Generated by Sonar --><profile>
    <name>Symfony2</name>
    <language>php</language>
    <rules>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/CyclomaticComplexity</key>
            <priority>CRITICAL</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/NPathComplexity</key>
            <priority>CRITICAL</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/ExcessiveMethodLength</key>
            <priority>BLOCKER</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/ExcessiveClassLength</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/ExcessiveParameterList</key>
            <priority>BLOCKER</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/ExcessivePublicCount</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/TooManyFields</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/TooManyMethods</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Code Size Rules/ExcessiveClassComplexity</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Design Rules/ExitExpression</key>
            <priority>CRITICAL</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Design Rules/EvalExpression</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Design Rules/GotoStatement</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Design Rules/NumberOfChildren</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Design Rules/DepthOfInheritance</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Design Rules/CouplingBetweenObjects</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Unused Code Rules/UnusedPrivateField</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Unused Code Rules/UnusedLocalVariable</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Unused Code Rules/UnusedPrivateMethod</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Classes.DuplicateClassName.Found</key>
            <priority>BLOCKER</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.EmptyStatement.NotAllowed</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.EmptyStatement.NotAllowedWarning</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.JumbledIncrementer.Found</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.UnconditionalIfStatement.Found</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.UnnecessaryFinalModifier.Found</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.UnusedFunctionParameter.Found</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.CodeAnalysis.UselessOverridingMethod.Found</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.ControlStructures.InlineControlStructure.NotAllowed</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.ControlStructures.InlineControlStructure.Discouraged</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Files.LineEndings.InvalidEOLChar</key>
            <priority>MINOR</priority>
            <parameters>
                <parameter>
                    <key>eolChar</key>
                    <value>\n</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Files.LineLength.MaxExceeded</key>
            <priority>MINOR</priority>
            <parameters>
                <parameter>
                    <key>absoluteLineLimit</key>
                    <value>120</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Formatting.DisallowMultipleStatements.SameLine</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Functions.CallTimePassByReference.NotAllowed</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Metrics.CyclomaticComplexity.MaxExceeded</key>
            <priority>MAJOR</priority>
            <parameters>
                <parameter>
                    <key>absoluteComplexity</key>
                    <value>20</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Metrics.CyclomaticComplexity.TooHigh</key>
            <priority>MINOR</priority>
            <parameters>
                <parameter>
                    <key>complexity</key>
                    <value>10</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Metrics.NestingLevel.MaxExceeded</key>
            <priority>MAJOR</priority>
            <parameters>
                <parameter>
                    <key>absoluteNestingLevel</key>
                    <value>10</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Metrics.NestingLevel.TooHigh</key>
            <priority>MINOR</priority>
            <parameters>
                <parameter>
                    <key>nestingLevel</key>
                    <value>5</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.NamingConventions.ConstructorName.OldStyle</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.NamingConventions.ConstructorName.OldStyleCall</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.PHP.NoSilencedErrors.Forbidden</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.Strings.UnnecessaryStringConcat.Found</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.WhiteSpace.DisallowTabIndent.TabsUsed</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Generic.WhiteSpace.ScopeIndent.Incorrect</key>
            <priority>INFO</priority>
            <parameters>
                <parameter>
                    <key>indent</key>
                    <value>4</value>
                </parameter>
                <parameter>
                    <key>exact</key>
                    <value>false</value>
                </parameter>
            </parameters>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Files.IncludingFile.BracketsNotRequired</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Files.IncludingFile.UseIncludeOnce</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Files.IncludingFile.UseInclude</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Files.IncludingFile.UseRequireOnce</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Files.IncludingFile.UseRequire</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Functions.ValidDefaultValue.NotAtEnd</key>
            <priority>BLOCKER</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Classes.DuplicateProperty.Found</key>
            <priority>CRITICAL</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Classes.SelfMemberReference.IncorrectCase</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Classes.SelfMemberReference.NotUsed</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Classes.SelfMemberReference.SpaceBefore</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Classes.SelfMemberReference.SpaceAfter</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Functions.FunctionDuplicateArgument.Found</key>
            <priority>BLOCKER</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.PHP.GlobalKeyword.NotAllowed</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.PHP.NonExecutableCode.Unreachable</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.PHP.NonExecutableCode.ReturnNotRequired</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Scope.MemberVarScope.Missing</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Scope.StaticThisUsage.Found</key>
            <priority>BLOCKER</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Zend.Files.ClosingTag.NotAllowed</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Zend.NamingConventions.ValidVariableName.NotCamelCaps</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Zend.NamingConventions.ValidVariableName.PublicHasUnderscore</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.WhiteSpace.DiscourageFitzinator</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.FunctionComment.Missing</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.FunctionComment.SpacingBeforeParamType</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.FunctionComment.MissingParamTag</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.ClassComment.Missing</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Formatting.BlankLineBeforeReturn</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.FunctionComment.MissingReturn</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.FunctionComment.ParamNameNoMatch</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Symfony2.Commenting.FunctionComment.ParamNameNoCaseMatch</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Commenting.FunctionComment.SpacingBeforeParams</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Functions.FunctionDeclaration.NewlineBeforeOpenBrace</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>PEAR.Classes.ClassDeclaration.OpenBraceNewLine</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceAfter</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceBefore</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceAfter</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceBefore</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast</key>
            <priority>MINOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Classes.ClassFileName.NoMatch</key>
            <priority>CRITICAL</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Commenting.ClassComment.Empty</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>phppmd_rules</repositoryKey>
            <key>Naming Rules/ConstructorWithNameAsEnclosingClass</key>
            <priority>INFO</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Commenting.FunctionComment.DuplicateReturn</key>
            <priority>MAJOR</priority>
        </rule>
        <rule>
            <repositoryKey>php_codesniffer_rules</repositoryKey>
            <key>Squiz.Commenting.FunctionComment.InvalidNoReturn</key>
            <priority>MAJOR</priority>
        </rule>
    </rules>
</profile>